module(name = "koladata")

bazel_dep(name = "abseil-cpp", version = "20250814.1", repo_name = "com_google_absl")
bazel_dep(name = "abseil-py", version = "2.1.0", repo_name = "com_google_absl_py")
bazel_dep(name = "arolla", version = "empty", repo_name = "com_google_arolla")
bazel_dep(name = "aspect_rules_esbuild", version = "0.22.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "boost.asio", version = "1.87.0")
bazel_dep(name = "boost.throw_exception", version = "1.87.0")
bazel_dep(name = "double-conversion", version = "3.3.0", repo_name = "com_google_double_conversion")
bazel_dep(name = "google_benchmark", version = "1.9.4", repo_name = "com_google_benchmark")
bazel_dep(name = "googletest", version = "1.17.0", repo_name = "com_google_googletest")
bazel_dep(name = "nlohmann_json", version = "3.12.0", repo_name = "com_github_nlohmann_json")
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "protobuf", version = "31.1", repo_name = "com_google_protobuf")
bazel_dep(name = "pybind11_abseil", version = "202402.0")
bazel_dep(name = "pybind11_bazel", version = "2.13.6")
bazel_dep(name = "pybind11_protobuf", version = "0.0.0-20250210-f02a2b7")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_python", version = "1.4.1")

# Note: We would like to use the latest version of Arolla during development.
archive_override(
    module_name = "arolla",
    strip_prefix = "arolla-main",
    urls = [
        "https://github.com/google/arolla/archive/refs/heads/main.tar.gz",
    ],
)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    ignore_root_user_error = True,  # Required for our containerized CI environments.
    is_default = True,
    python_version = "3.11",
)
python.toolchain(
    ignore_root_user_error = True,
    python_version = "3.12",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip", dev_dependency = True)
pip.parse(
    hub_name = "koladata_pip_deps",
    python_version = "3.11",
    requirements_lock = "//:requirements_lock.txt",
)
pip.parse(
    hub_name = "koladata_pip_deps",
    python_version = "3.12",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, pip_deps = "koladata_pip_deps")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "icu4c",
    build_file = "external/BUILD.icu4c",
    integrity = "sha256-TLp7es0dPELES7DBS+ZjcJjH+vKzMM6Ha8XzuRXQl0U=",
    url = "https://github.com/unicode-org/icu/releases/download/release-69-1/icu4c-69_1-src.tgz",
)
