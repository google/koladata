// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
syntax = "proto2";

package koladata.internal;

import "arolla/serialization_base/base.proto";

message MissingCollectionItemSchemaError {
  enum CollectionType {
    UNKNOWN = 0;
    LIST = 1;
    DICT = 2;
  }
  optional arolla.serialization_base.ContainerProto missing_schema_item = 1;
  optional CollectionType collection_type = 2;
  optional int64 item_index = 3;
}

// Error when the assigned value has a different schema than the expected one.
message IncompatibleSchema {
  optional string attr = 1;
  optional arolla.serialization_base.ContainerProto expected_schema = 2;
  optional arolla.serialization_base.ContainerProto assigned_schema = 3;
}

message SourceLocation {
  optional string file_name = 1;
  optional int32 line_number = 2;
}

// Koda error message transportation proto.
message Error {
  optional string error_message = 1;
  oneof error {
    IncompatibleSchema incompatible_schema = 5;
    MissingCollectionItemSchemaError missing_collection_item_schema = 7;
  }

  reserved 2, 3, 4, 6;
  repeated SourceLocation source_location = 100;
}
