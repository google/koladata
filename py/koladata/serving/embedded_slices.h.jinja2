{%- set guard = build_target.replace("//", "").replace("/", "_").replace(":", "_").upper() + "_H_" -%}
#ifndef {{guard}}
#define {{guard}}

{# jinja2 file itself is NOT auto generated. -#}
// THIS FILE IS AUTOGENERATED. DO NOT EDIT.
// NOLINTBEGIN
// Build target:
// {{build_target}}

#include <string>

#include "absl/container/flat_hash_map.h"
#include "absl/status/statusor.h"
#include "absl/strings/string_view.h"
#include "koladata/data_slice.h"

{% for n in namespaces %}
namespace {{n}} {
{%- endfor %}

// The map contains slices:
{%- for name in slice_names %}
// *     "{{name}}"
{%- endfor %}
const absl::StatusOr<absl::flat_hash_map<std::string, ::koladata::DataSlice>>&
{{function_name}}();

absl::StatusOr<::koladata::DataSlice>
{{function_name}}(absl::string_view name);

{%- for name in slice_names %}

inline absl::StatusOr<::koladata::DataSlice>
{{function_name}}_{{name.replace(".", "_").replace("/", "_").replace("-", "_")}}
() { return {{function_name}}("{{name}}"); }
{%- endfor %}
{% for n in namespaces %}
}  // namespace {{n}}
{%- endfor %}
// NOLINTEND

#endif  // {{guard}}

{# end of template #}
