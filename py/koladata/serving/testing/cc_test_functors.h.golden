#ifndef THIRD_PARTY_PY_KOLADATA_SERVING_TESTING_CC_TEST_FUNCTORS_H_
#define THIRD_PARTY_PY_KOLADATA_SERVING_TESTING_CC_TEST_FUNCTORS_H_

// THIS FILE IS AUTOGENERATED. DO NOT EDIT.
// NOLINTBEGIN
// Build target:
// //py/koladata/serving/testing:cc_test_functors

#include <string>

#include "absl/container/flat_hash_map.h"
#include "absl/status/statusor.h"
#include "absl/strings/string_view.h"
#include "koladata/data_slice.h"


namespace koladata_serving_test {

// The map contains slices:
// *     "plus_one"
// *     "ask_about_serving"
// *     "TEST_DS"
const absl::StatusOr<absl::flat_hash_map<std::string, ::koladata::DataSlice>>&
TestFunctors();

absl::StatusOr<::koladata::DataSlice>
TestFunctors(absl::string_view name);

inline absl::StatusOr<::koladata::DataSlice>
TestFunctors_plus_one
() { return TestFunctors("plus_one"); }

inline absl::StatusOr<::koladata::DataSlice>
TestFunctors_ask_about_serving
() { return TestFunctors("ask_about_serving"); }

inline absl::StatusOr<::koladata::DataSlice>
TestFunctors_TEST_DS
() { return TestFunctors("TEST_DS"); }

}  // namespace koladata_serving_test
// NOLINTEND

#endif  // THIRD_PARTY_PY_KOLADATA_SERVING_TESTING_CC_TEST_FUNCTORS_H_

