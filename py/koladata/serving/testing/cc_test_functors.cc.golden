// THIS FILE IS AUTOGENERATED. DO NOT EDIT.
// NOLINTBEGIN
// Build target:
// //py/koladata/serving/testing:cc_test_functors

#include <string>

#include "py/koladata/serving/serialized_slices.h"
#include "koladata/serving/slice_registry.h"
#include "absl/base/no_destructor.h"
#include "absl/container/flat_hash_map.h"
#include "absl/status/statusor.h"
#include "absl/strings/string_view.h"
#include "koladata/data_slice.h"
#include "arolla/util/init_arolla.h"


namespace koladata_serving_test {

const absl::StatusOr<
    absl::flat_hash_map<std::string, ::koladata::DataSlice>>&
TestFunctors() {
  constexpr absl::string_view data(
      "\x83\xaf\x70\xd1\x0d\x88\x4a\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x91\xba\xc2\x3c\x92\x87\xe1\xa9\x00\x00\x00\x00\x00\x00\x00\x00\xe1\x9f\x13\xc0\xe9\xb1\xc3\x72\x73\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x49\x43\x1f\x23\xb0\xde\xa9\xb4\x75\x07\x00\x00\x00\x00\x00\x00\xd3\x93\x63\xc3\xf7\xba\x75\xed\x72\x77\x00\x00\x00\x00\x00\x00\x80\x0e\x00\x00\x00\x00\x00\x00\x62\x69\x79\x1b\x78\x00\x00\xc4\x88\xb9\x4d\x7e\xe0\x3f\x51\x6b\x68\xdd\x91\x08\x31\x70\x54\x40\x3a\x05\x20\xfd\xf5\x79\x1b\xba\x4a\x43\xf2\x27\xef\xca\xb2\x2a\xbd\xb2\x2c\x13\x06\xf7\x2b\x11\x11\xcf\xf4\x70\xeb\x0d\x12\xa4\x41\x5c\x88\xc1\xc2\x78\x30\x19\xe3\x8b\x0b\x2e\xd8\xd0\x6b\xaa\x36\xba\xc9\xb4\x6e\x9e\x5d\xd9\xb1\x9d\xfd\x60\x49\x5e\x55\x55\x9e\x1a\x5c\x89\x03\x0d\xc2\x3d\x58\xb8\x20\x80\xa6\x6a\xd9\x1f\x96\x24\x00\x80\x1d\x1b\x7f\x0e\x11\xd5\xa4\x1e\x00\x34\x73\x40\xb9\xb1\x3f\xf7\xa3\x8c\x26\x14\x51\xa4\xa5\x21\x33\x55\xda\x68\x56\x87\x99\xcc\x03\x51\x96\x3b\x76\x9e\x1a\x81\x88\xd1\x9e\x5a\xba\x78\x6b\xea\xa1\x39\x5f\x98\xc9\xfc\x10\xd3\x72\xc7\xce\x5f\x2b\x10\xb1\xda\x59\x3b\xeb\x9e\xba\x05\x7a\x0c\x2c\x76\x93\x48\x76\xdb\xca\x31\xae\x87\x6d\x5f\x68\x18\x14\xb7\xbc\x4d\xfb\xed\xcf\x5c\xc2\x8c\x40\xb1\x7d\x94\xac\x4b\x59\x7d\xbd\x61\x3e\x2d\xe5\x75\x3b\x3e\x45\xf2\xeb\x77\x5d\x60\x03\xce\x3d\x09\x9e\xac\xb7\x0d\x8f\x0a\x22\x78\x5a\x8d\xe7\xab\xf1\x1b\xab\xb1\x24\x82\x9e\x11\x64\xd9\x5c\xca\x5e\x2a\x1f\x48\x18\x16\x8e\xec\x66\x0a\xb8\x47\x50\xa1\xed\x87\x44\x09\x29\xd6\x12\x1d\x6c\xc0\x79\x36\xea\xa0\xef\x83\xef\xf3\xac\xcd\x3b\xff\x98\x68\x48\x3c\x1a\x97\xb1\xd0\x29\x85\x79\x12\x97\x44\x9f\x49\x5b\x94\xb6\x25\xf7\xe9\xef\xe7\xb2\xce\x67\xb3\x07\x34\xc0\x9d\x0f\x64\x37\x90\x0f\xb8\xcc\x3a\xcf\xa2\x6a\x8b\xbf\xbf\xf9\x77\x63\x2f\xb0\x4f\x5d\x80\x81\x3c\x93\x40\x02\xf3\xae\xdd\x86\x6d\x5c\xc6\xc1\xae\xcc\xa4\xcd\xb6\xa8\x55\xa7\xf3\x96\x52\xbb\xe0\x61\x44\x16\x24\xa5\xb1\x66\x22\x1e\xb3\x4c\xa0\x26\x17\x3f\xb4\x5b\x18\xc5\x2f\x99\x45\x14\x6c\x8c\x8d\xb5\xc5\x2d\x04\x11\x6d\x13\x43\xe8\x0a\x82\x1f\xe6\x46\x8d\x3c\xf5\x50\x00\x7b\xa1\xae\x01\x16\x92\x4f\x76\xe7\x04\xd6\x06\x40\x8a\x40\xa8\xd4\x0a\x5e\x00\x1c\x6f\x97\x0f\x4d\x26\xda\x4c\xe4\x57\x06\x54\xe9\xbd\x0b\xc4\xd6\xee\xe1\x4a\x2c\xc1\xca\xa8\xc4\xcf\x81\x71\x3a\x00\xa1\xcc\x4d\x88\x74\xda\xda\x92\xaf\xf4\x0a\x33\x41\x4e\x02\x92\x8f\xdf\xcf\xd5\xdd\x36\xd4\x13\x21\xce\x42\xdb\xfb\x93\x0e\x29\xd2\x54\xd2\x12\xe2\x7e\x7f\x9e\x10\x8f\x62\x12\x5d\x12\x4b\x48\x23\x74\x97\x92\x28\x95\x86\xe5\xb2\x95\xd6\xc4\x47\x7f\x06\xf7\x02\x86\x1d\x1e\x1a\x5a\x22\xad\x04\xf7\x35\xe3\x0f\x2d\xa7\x70\xe8\x1c\xbf\xb9\x06\x3b\x12\x1c\x3c\xf0\xd3\x1b\x45\xec\x91\xee\x4d\x8b\xe3\x17\xb2\x1a\x4c\x4f\x36\xba\x5f\x35\x3c\x18\xe2\xe8\xc9\x55\xf7\xa7\x22\x01\xa4\x97\x17\x83\x96\x1f\x87\x3a\x37\x61\x3c\xfc\xc8\xdb\x89\x1b\x7f\x20\x86\xa1\x6b\x5f\x5b\xf9\xee\xfe\x1c\xd6\xf7\x81\xe9\x7e\xed\xae\x83\x3e\x6c\x14\xb1\xc0\x7e\xd2\xea\x32\xb8\x96\x2a\xd9\xc0\xd5\x8f\xb8\xa1\x91\xde\xe2\xfd\x87\x08\xcc\x22\x8e\x32\x53\x04\x17\x4e\x60\xea\x8f\x6a\xbb\x68\x0a\x54\x38\x92\x35\x52\xa7\xcb\xe7\x1e\x2f\x1d\x34\x19\x46\x83\x97\x36\x66\xaa\x4c\x80\x20\xc1\x81\x2f\x79\x91\x24\x26\x83\x52\xf3\xec\xe0\xb6\x4a\xd4\x34\x49\xd1\x5f\x54\x24\x45\x51\xea\x00\x20\x16\x96\xd8\x09\xc8\x6f\xcb\x9b\xa5\x6a\x31\x47\xda\x6b\xaf\xda\x09\x5d\x59\x72\x8d\x22\x4c\xc0\x3c\x75\xaa\x66\x83\x5a\x87\xd9\x23\xde\x4f\x63\xed\x6c\xb9\x84\xd3\xc6\xfa\x1e\xff\x3d\xcb\x7b\x98\x61\x4b\x6c\x8d\x66\x36\xaa\xf5\x38\xae\x75\x6f\xa5\x37\x2a\x0d\xc7\x0d\x9d\xe8\xd7\x5b\xaf\x0e\xcf\x8f\x02\x6e\x4a\x60\xf9\xea\x64\xd2\x7c\xb9\x84\x0b\x33\xb8\xdb\x5f\x9e\xbf\xfa\x1f\x2e\x40\x6d\x05\xf5\x9f\x58\x7b\x0d\x8f\x9a\x3f\x79\x01\xa3\xdc\xf5\xee\xf4\x2e\x5f\x77\x60\xc5\xc3\x77\x5e\x08\x76\xd9\xba\xfa\xd6\x16\x46\x39\xd1\x7c\x1e\x6a\x7d\x4a\xc8\x16\xc4\x62\x84\x02\xe9\x2c\x9c\x57\x81\xc9\x1d\x31\x81\xd9\xa6\x2f\x93\xcd\x6a\xc1\xb8\x60\x26\x64\xb6\xa0\xaf\xba\xc6\x31\x13\xc2\x35\x2d\x9a\xe5\x6a\x69\xc0\x0b\xed\xaa\x42\x99\xef\x85\x8d\x98\x71\x6c\x81\xe1\xd0\xb2\x9d\x1a\x2d\x53\x5d\xf7\x62\x82\xb8\x91\x73\x20\x9e\xb2\x00\xe9\x26\x6c\xe1\x26\x52\x97\xba\xa3\xab\x09\x87\xc6\x80\x9d\x6b\x9c\x38\xc6\xe7\xed\x1c\x82\x7e\x6f\x3b\x8c\xee\x4f\x9d\xed\xf0\x45\x9c\x2a\xba\x05\x6d\xf0\x17\x02\x3e\x4c\xde\x3b\x5d\x09\x1e\xda\x95\xae\x93\x58\x3e\xda\xf9\x37\x3c\x97\x64\x9b\x1d\xe9\xa2\xdd\x6c\x13\x2a\x2b\xb3\xa8\xc5\x1e\x21\x19\x42\xb6\xd8\xc4\xe0\x1a\xda\xf9\xab\x11\x7e\x51\x20\xff\x1b\x01\x10\x88\xef\xc6\x5a\x22\x06\xc8\x30\x10\x6c\xb4\x46\x68\x80\xb4\x00\xc5\xb3\xeb\x20\x22\xa2\x40\xd4\xa2\xe6\x87\xa6\x36\xc2\xcd\x16\x3c\x18\x91\x08\x69\x91\xcf\xb2\x38\x3c\x23\x2d\xf5\xc6\xb2\xcc\x78\x18\x87\x1c\xdd\x71\x76\x1a\xc9\x3f\x2f\x26\x2b\x5d\x6c\x0c\xd5\xd6\xfa\xf9\xee\xdc\x94\xe4\x1d\x35\xbd\xf0\x45\xc0\xc6\x7d\xdf\x3a\xd3\x09\x0d\x6e\x71\x09\x06\x60\x87\x10\xb1\x75\x35\x1d\x34\x5d\xc9\x34\xb9\x72\x1c\x99\x82\x03\x0c\xcd\x48\x33\xd7\xac\x90\x3a\xf4\x57\x47\xc0\xb2\x61\x1e\x42\xc0\xe9\x51\x28\xf4\xfa\x9f\x05\xb7\x6f\xf6\x6a\xbb\xdd\x60\x93\xfb\xf9\x15\xdb\x57\x34\x2c\xb0\x50\x0d\x2c\xa8\xd4\xfd\x73\x10\x06\xa5\x6c\xbe\x8f\x10\x70\xb9\x82\xcd\x91\x89\x43\xa3\x08\xb8\xd5\x41\xd8\x79\x0c\xd4\x86\xd4\xb3\x1f\x2e\x0a\xd8\xfa\x86\x35\xf8\x65\x8a\x23\x10\xf0\x9a\xb6\xf5\x56\x0d\x56\x95\x28\x68\xce\xf9\x97\x6b\xd7\x16\x3f\x16\x3b\x16\x33\xf0\x89\x1c\x65\xae\xb9\x6b\x9e\x51\x8d\xec\xfa\xce\xa4\x91\xc6\xc5\x45\x8d\x14\xf0\x03\x43\x5c\x1c\x33\xea\x6b\x16\xed\x8a\x49\xba\x5e\x0f\x70\x76\x9e\xb5\x62\x01\xda\x41\x97\x39\x7e\x3c\x08\xc0\xc8\x16\x7f\x82\xd5\x0b\xc9\xdc\x0b\x0d\x7f\xf1\x20\xd4\xb3\xc4\x08\x2c\x89\xf3\xba\xcc\xcb\xf1\xe3\x81\x60\x34\x5c\x48\x5f\x2b\xf5\x30\x45\xfd\x6d\x9a\x7f\xdc\x2b\x6a\xab\xfd\x02\x92\xf0\xd9\xcb\x78\x5f\x1a\xfb\x59\x98\x02\xfe\xc5\x03\x45\x8d\x40\x98\x77\xb2\x0d\x43\x7a\xdc\xe7\x0f\x46\x5c\x8a\x77\xa8\x9b\x0d\xef\x28\x39\x91\x99\xcc\x88\x54\x7e\x93\xd4\x25\xd1\x21\x84\xb7\x49\x75\x3d\x57\x87\x49\x55\x5f\xc0\xc9\xa7\x87\xc3\x96\xe5\x95\xbf\x7f\x20\x49\xf9\xff\xe2\xd7\x41\xcf\xcb\xe1\x6f\x07\xf0\xbe\xe5\x2b\x3b\xa1\x72\x6c\x17\x1d\x5c\xf0\xbf\x78\xb0\xa8\x28\xe6\x58\x60\x1e\x7e\xdc\x43\xd7\x33\x53\x0c\x46\xbe\xf4\x55\x0d\x88\x79\x1d\x58\x6f\xaf\x44\x2d\x08\x93\x56\x99\x05\xd5\x0b\x2b\x06\x2c\x48\xd1\xeb\x00\x1e\x48\xb8\x4e\x40\x8b\x85\xd6\x4b\xca\xc6\x6c\x10\xa1\x89\x4a\xfa\x0f\x21\xd1\x90\xee\xba\x84\x5b\x02\x94\x80\x40\x19\x54\x40\x15\xd4\x40\x1d\x34\x40\x13\xb4\xc0\x9f\x9e\x81\x91\x89\x99\x85\x95\x8d\x9d\x83\x93\x8b\xdb\xe8\xe2\x1f\x98\xf7\x81\x11\x22\xe4\xc2\x3a\x60\x2d\xd9\x03\x30\x14\x90\x60\x5a\x86\x04\x50\xe7\x34\x2c\xc0\x31\x44\x04\x44\xfa\x88\x16\x4c\x88\x09\xae\xda\x3f\x98\x97\x18\x08\x59\xaa\xc3\xb1\xef\x3a\x00\x25\x4d\xe4\xab\x14\x4e\x8a\xd4\x10\x01\x98\x5a\xdb\x70\x32\x15\x86\xc3\xdd\x14\x2d\x33\xf6\xe4\x80\x74\x10\xa7\x58\x6b\xe3\x91\xbe\x26\x02\x1f\x6b\x57\x07\x50\xb9\x36\x12\xf5\xc4\x10\x64\x35\xe4\xb4\x74\x90\xe9\x63\x38\xf9\x54\x41\x9d\x76\xa9\x10\xa3\x29\x6a\x70\x85\xbf\xf7\x2d\xf3\x23\xb9\x62\x23\xf1\x8b\xff\xfa\xe9\xf3\xb6\xf7\x2d\x75\x75\x24\x44\x49\x83\x24\x2a\x81\x5b\x8d\x80\xe8\x18\x4e\x59\x43\xe5\xac\x34\xab\xd4\x08\xaf\xd1\x39\x55\x0d\x35\xe6\x48\xc5\x57\x0a\xdd\xc8\x00\x05\x50\x04\x0e\xc2\xb2\x7f\x7d\x64\xb7\xd2\xd0\x16\xb5\x90\x11\x18\x3a\x2e\x3d\x9d\xff\xeb\x4a\xbb\xa1\xfe\xda\x3f\xa7\x67\x35\x99\xdd\x0f\x40\x39\x81\xea\xe1\x89\xf2\xe9\xc5\xa3\x44\x97\xee\xdc\xf4\x9e\x9f\x6c\x1c\xe5\xac\x0b\xec\xfd\x6f\x2d\x3f\x6c\x17\xd7\xde\x91\xd9\xdf\x8d\xad\xe7\x83\x55\xed\xab\xc0\x38\xec\x84\x23\x4f\x18\xd7\x12\x0f\xaa\xf8\x75\x86\x86\x60\xc1\x00\x65\x64\x6c\x60\x1c\x55\x6b\xc4\x73\xa1\x91\x86\x28\x24\x92\xb2\x64\x52\x58\x72\x6c\xa7\x5f\x2b\x4b\x37\x9e\x9a\x3c\xdb\x1c\x63\x18\x40\x2a\xf5\x51\x8a\x0b\xee\x57\xdb\xae\x45\x3d\x9d\x0d\x20\xed\x32\x63\xcf\xc1\x65\x56\x72\x20\x7b\x22\x90\x9d\xba\xad\xfc\x34\x08\x59\x10\x45\x91\x4b\xe6\xc9\x99\x23\x58\x3c\xe3\xe1\x14\xf0\xf0\x62\x14\x44\x87\xc4\x70\xf9\xf9\xa1\x75\x3d\x43\xd1\x8b\x63\xfc\x12\xfc\x54\x3c\x95\x50\xa2\x28\x89\xa2\xc4\xe1\xa5\xcc\xff\x1b\xfe\x10\x53\x08\x51\xf5\xd1\xc1\x39\xe0\x7d\xd3\xa3\xdf\xbd\xd4\x47\x07\xe7\xd8\xdf\xb9\x59\x02\x16\x2f\x5c\xe8\xf7",  // golden_test:ignore
      2013);  // golden_test:ignore
  static const absl::NoDestructor result(
      ::koladata::serving::ParseSerializedSlices(data));
  return *result;
}

absl::StatusOr<::koladata::DataSlice>
TestFunctors(absl::string_view name) {
  const auto& slices = TestFunctors();
  if (!slices.ok()) {
    return slices.status();
  }
  return ::koladata::serving::GetSliceByName(*slices, name);
}

AROLLA_INITIALIZER(
    .deps = {
        ::arolla::initializer_dep::kOperators,
        ::arolla::initializer_dep::kS11n,
    },
    .init_fn = []() -> absl::Status {
      ASSIGN_OR_RETURN(const auto& slices, TestFunctors());
      for (const auto& [k, v] : slices) {
        RETURN_IF_ERROR(::koladata::serving::RegisterSlice(
            absl::StrCat("//py/koladata/serving/testing:cc_test_functors@", k), v));
      }
      return absl::OkStatus();
    });
}  // namespace koladata_serving_test
// NOLINTEND

