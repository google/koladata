// THIS FILE IS AUTOGENERATED. DO NOT EDIT.
// NOLINTBEGIN
// Build target:
// //py/koladata/serving/testing:cc_test_functors

#include <string>

#include "py/koladata/serving/embedded_slices_internal.h"
#include "absl/base/no_destructor.h"
#include "absl/container/flat_hash_map.h"
#include "absl/status/statusor.h"
#include "absl/strings/string_view.h"
#include "koladata/data_slice.h"


namespace koladata_serving_test {

const absl::StatusOr<
    absl::flat_hash_map<std::string, ::koladata::DataSlice>>&
TestFunctors() {
  constexpr absl::string_view data(
      "\x83\xaf\x70\xd1\x0d\x88\x4a\x3f\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x91\xba\xc2\x3c\x92\x87\xe1\xa9\x00\x00\x00\x00\x00\x00\x00\x00\xe1\x9f\x13\xc0\xe9\xb1\xc3\x72\x73\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x43\x63\x7c\x62\x9d\x76\x96\x94\x9d\x06\x00\x00\x00\x00\x00\x00\xf4\x7e\xe0\x1a\x02\xbd\xfc\xee\x72\x61\x00\x00\x00\x00\x00\x00\xf8\x0c\x00\x00\x00\x00\x00\x00\x62\x59\x63\x1b\x62\x00\x00\xc4\x88\xb9\x4d\x7e\xe0\x3f\x51\x4d\x68\xe5\x08\xb5\x43\xe8\x14\x40\xd0\xb7\xef\xdb\xd0\x55\x1a\x92\x7f\x65\x55\x95\x7e\x59\x96\x09\x83\xfb\x95\x88\x88\x67\x7a\xb8\xf5\x06\x09\xd2\x20\x2e\xc4\x60\x63\x3c\x98\x54\xb5\xf5\x93\x4c\xa3\xeb\xd9\x95\x1d\xdb\xf9\x1f\x96\xe4\x97\x65\xe5\xab\xc1\x95\x38\x90\x06\xe1\x1e\x54\x2d\xff\xc1\x92\x04\xf8\x19\x1b\xf7\x0c\x11\xd5\xa4\x1e\x00\x34\x73\x40\xb9\xb1\x3f\xf7\xa3\x8c\x26\x14\x51\xa4\xa5\x21\x33\x55\xda\x68\x56\x87\x99\xcc\x03\x51\x96\x3b\x76\x9e\x1a\x81\x88\xd1\x9e\x5a\xba\x78\x6b\xea\xa1\x39\x5f\x98\xc9\xfc\x10\xd3\x72\xc7\xce\x5f\x2b\x10\xb1\xda\x59\x3b\xeb\xfe\xd5\x97\x44\x8f\x81\xc5\xf6\x83\x91\x64\xb7\xad\xc0\x43\x36\x82\x7d\x4a\x96\x92\xf5\x36\xd5\x6f\xbe\x0b\x3e\x23\x78\xb1\x3d\x88\x55\x93\x8c\xd2\x41\x9d\x6c\xdf\xec\x8a\x94\x6d\xcc\x74\xeb\x52\x02\x1b\x70\xee\x49\xf0\x64\xbd\x6d\x4f\x05\x11\x74\xb8\x1c\xcf\xe7\x9c\x12\x41\xcf\x08\xd2\x64\x2e\x65\x97\xc9\x07\x12\x86\x85\x23\xdb\x74\x80\x97\xeb\x00\x85\xb6\x1f\x18\x01\x50\x4b\x74\xa5\x20\x67\xf0\xeb\xfa\x5d\xcf\xf9\x1d\xc8\x90\xd0\x6e\x43\xba\xd0\xaf\xa4\x6f\x35\xc0\x95\x08\x49\xaa\x50\xd3\xfc\x5f\xf3\x72\xd1\xc2\x1f\x68\x80\x13\xdd\x1b\xc8\x01\xae\xc2\x2a\x1b\x33\xa9\x12\x37\xdc\xd1\xcd\x1f\xb3\x31\x27\x58\x82\x81\x9c\x49\xe5\xe9\xc6\xb0\x0d\x5f\x38\x60\x56\xb4\x14\xcd\x6d\x61\x1b\x83\xc9\x9c\x68\x15\x6c\x0a\x96\xb2\x54\xae\x04\x43\xd3\xda\xfd\xd2\x1e\x54\x39\x6d\x46\xcb\x04\x4b\x70\xc1\x67\xd8\x58\x1b\xe4\x8e\x2c\xa3\x2b\x62\x9f\x77\xea\xb6\xd4\x47\x7f\x09\x4f\x65\x1c\x26\x7a\xb8\x1a\x34\xf4\xf4\x00\x48\x04\x08\x91\x00\x08\x80\x9f\xf6\x73\x9b\xbf\xff\x66\xb7\x9b\x29\x62\x87\xb9\x76\x42\xa1\x8a\x7a\x24\x41\xd3\xa8\x19\x12\xc9\x93\xcb\xef\xef\xb7\xdf\xc1\xec\xbe\x11\x12\xa1\xd1\x34\x4a\x92\x64\x12\x9a\x45\x46\x85\x87\x8f\x46\x22\xe1\xd1\x2d\x59\x82\x8a\x7f\x51\x19\x5b\x53\x5b\x46\x59\x21\x51\xb8\x72\x7c\x9d\x25\x54\x55\x08\x03\x80\xfb\x15\xd5\x80\x25\x10\x48\x64\xb7\x4c\xce\x4d\x78\x14\xa6\xa0\x26\xd4\x8c\x9d\x9b\x4d\x1b\xaa\x2e\x5b\xe2\xbe\x5d\xa1\x50\xe0\xce\xcf\x52\x9b\xe5\x9c\x16\xbe\x8c\x7f\x68\x79\xf8\xa1\x73\xfc\x66\x52\xa7\xe2\xe3\x27\xd5\x74\xec\xbb\xf1\xfb\x1a\xca\x6c\x78\xa0\xd1\x7b\x7a\xfe\x20\xc2\xc6\x1e\xcf\xd3\x3f\x1b\x01\x72\xeb\x75\xa8\xea\xf2\x50\xda\x95\x8c\x82\x11\x63\x3c\x3b\xee\x0f\x74\x9e\xa7\xc9\x6b\x7b\x9f\xde\x5f\xc7\xf5\x7d\xd8\xa4\xbf\xba\x1a\x74\x58\x1e\xe2\x80\xfb\x52\x7e\x19\xae\xa6\x0e\x3a\xc0\xe2\x4f\xdc\x90\x85\xdd\x15\xfe\xfb\x69\x52\x04\x0a\x63\x63\x28\x2e\x16\xc1\xb5\x3f\xd5\x75\xb3\x0c\x98\x58\x10\xde\xc2\x5c\xac\x5e\x07\x2a\x75\xb2\x74\x0c\xdd\x3c\x9a\x6d\x4c\x19\x01\x81\x86\x00\x71\xaf\x8d\x8c\xb8\x06\x72\x4b\x01\x8a\x36\x95\x2a\x70\x37\xeb\xb7\x47\x4f\x1b\x99\x20\x06\xba\x5c\x0c\x74\xff\x49\xdd\x66\xd1\x99\x70\x5f\xf0\xcf\xf4\x1f\x9b\xab\x9f\x60\xce\xe8\xf9\xf2\xf6\xef\x0d\x25\xcb\x74\x3f\xa1\xc9\xce\xa1\xd1\xbf\xe7\x49\x22\xd8\xda\xb3\x39\xf0\x7c\xac\x78\x9b\xd0\xfd\x8c\x66\x33\xeb\x8c\x78\x89\x8d\x7f\xda\x8f\x44\xb6\x1d\xd4\x8d\xa6\xef\xdb\x50\xb9\x51\x16\x4c\xcc\x24\xc8\xe7\xe2\xc6\x77\x60\x5c\xfb\xc9\x88\x39\x72\xe0\xda\x6f\x5f\xbf\x0e\xef\xfc\x10\xd9\x7c\x14\xef\x53\x55\xd5\x6d\x0d\x1c\x19\xae\xbf\xf2\xb7\x7d\x44\x95\xd3\xdd\x02\x92\x13\xc2\xd0\xda\x4e\xc3\xeb\x80\xe3\xe4\x4d\x3d\xa6\xd8\x74\x92\x0a\x68\x86\xbc\x1a\x81\xed\x93\xc3\xc9\xbb\x98\x94\x25\x9b\x5a\xa7\xb4\xf8\x80\x15\x20\x7c\xae\xd8\x91\x5f\xc7\x16\x8d\x5d\xd4\xaf\x03\x8b\x79\xb4\xfb\x55\x46\x23\x9f\x4a\x89\x18\xa3\x35\x40\xfb\x0c\x6b\xac\x74\xe9\x4b\x7d\xd6\xf5\x84\x5d\x62\xc1\x8e\x5c\x73\xec\x58\x9f\x37\xed\x38\xe8\x73\x6d\xb3\xb8\x66\x47\x2f\xf7\xd4\x2a\xcf\x15\x25\xc4\xf2\x7c\x0e\xda\xa1\xf4\xbe\x75\x18\xb8\x89\x8d\x38\x73\xc9\x1a\x63\x9c\xff\xc6\x6a\xc2\xbe\x19\x96\x1e\x3a\x6c\x4e\x29\x78\x33\x07\x15\xac\xf0\x51\x1e\x98\x84\x4b\x10\x7c\x40\x5d\x7f\x35\x82\x0f\x45\x06\x67\x11\x20\xfc\xe2\xfd\xdb\x1b\xb9\x1c\xa0\x63\x88\x80\xd3\x69\xc1\x00\x65\x40\x1e\xef\x2e\x93\x10\x46\x81\x88\xc6\xf4\xa8\x0e\x77\xcc\xfc\x08\x78\x1d\x25\x9e\xa8\x93\xe4\x48\x6d\x81\xca\x6c\x5c\x39\x1e\xa5\xa1\x5a\xd9\x0f\x65\x0c\xe8\xae\x8d\x93\x32\xdb\xa4\x50\x3d\xc1\xe7\x3f\xfc\x57\xfe\xbd\x97\xc4\xc9\xe7\x1c\x90\x40\x90\x63\x72\x95\xf4\xdc\x82\x55\x1e\x01\x40\x48\xf9\x1a\x6c\x12\x7b\x91\x36\x64\xb3\xac\xa8\x82\x41\x58\x79\xee\xa9\xbe\x1a\x50\xa8\xe2\x85\x27\xce\x4a\x1b\x42\x3e\x8b\x10\xe1\x7b\xa8\x29\xb0\xd5\x52\x7b\xfe\xcc\xc5\x0f\x1c\x4d\x84\xcc\x27\xb9\x6d\x79\xe4\x76\xc6\x1e\x8d\x88\x00\xc0\x5c\xe4\x37\x5d\xff\x04\x39\x39\xba\xc2\x13\x53\xe7\x1b\xbc\xe3\x1d\x86\xf7\xd7\x9b\xdc\xde\xfe\xdf\x3f\x70\x35\xff\x93\xaf\x75\xe5\x71\xf3\x5b\x80\x9b\xdc\x57\xd4\xd3\xbe\x7e\xc2\x2c\x11\xf5\x17\x11\xf9\x7c\xac\xa2\x15\x5c\x93\x92\x94\xe5\x15\xae\x46\x00\x6c\xbe\xca\xb0\x93\x76\xcc\xd0\xf8\x07\xb6\xee\x96\xb1\x91\xee\x77\xe0\xe2\x73\x1a\x7e\x99\xf6\x3e\xc7\x23\xf8\x45\xc0\x67\x41\x3a\xb4\xef\x4d\x6d\x29\x07\xd8\x39\xf9\x21\x44\x78\x2f\x80\x63\x7a\x80\x6d\x67\xa5\xfb\x95\xf6\xa0\x94\xbb\x8b\x09\xbf\x88\x80\xc6\x51\xcf\x12\xc7\xd5\x28\xfa\xac\xb2\x04\x9d\x8b\x4d\x57\x0e\xa4\xe6\x77\x03\xc4\x31\xb8\xeb\xec\x94\x38\x2f\xa7\x0c\x52\x18\x49\xd6\x56\x5f\xfb\xd0\x35\xa8\x2a\x65\x00\x4f\xcf\xdb\x27\x21\x85\x64\xa2\x5b\xbb\xd4\xb5\xa8\x06\x6d\x03\xee\x1c\x94\x2f\x72\xff\x0d\x3e\x11\x28\x94\x12\x54\x40\x40\x0d\x14\x34\xa0\x05\x1d\xe8\x21\x12\x11\x62\x24\x62\xc5\x51\xbc\x04\x4a\xa4\x24\x4a\x46\x8a\x0c\xb9\xd6\xc3\x3f\x11\xbb\x22\xe0\xd1\x44\x36\x00\x77\x3e\x33\x09\x53\x21\xa2\x8e\x22\x22\xbc\x46\x25\x12\xc2\x5f\x03\x10\x01\x75\xca\xa4\x03\x7b\x21\x84\x9d\x27\x09\x38\x52\x40\x44\x43\x32\xed\xc0\x1f\x27\x20\xa6\x26\x44\xe9\x62\x22\xa1\x06\x4c\x4a\xa0\xdc\xd8\x52\xea\xcf\x61\x51\xe9\x82\x24\x84\x99\x04\xa8\x0d\xd3\x0f\xe8\x73\x98\x0b\xcc\x98\x44\x40\xe7\x26\x82\x85\x15\xa9\x2e\x40\x64\x46\x79\x0f\x68\x92\xdb\x08\xa2\xc8\x94\x66\x0b\xd2\x5b\x20\xc8\x48\xc4\x05\x57\x9f\x23\xcf\xbe\xf8\xb1\xf7\x5d\xf0\xe2\xf6\xe5\xa2\xfa\x18\x58\x74\x1c\x6a\x23\x3d\x3b\xd4\x5c\x0a\x56\x68\x01\xa2\x31\x6a\x8f\x0e\xf5\x92\x82\xbd\x56\x27\x3a\xa3\xde\xd5\x91\x84\xde\x45\x0c\xcc\x00\x95\x0c\xe4\x90\x8e\x7b\xfd\x12\x1d\xc9\x4a\x52\xe4\xd4\x71\xf6\x6a\x12\xea\xdb\x6a\xbd\x01\x6c\xed\xf6\xb3\x90\xb8\xef\x9f\xb9\xb6\x9c\x5a\x98\x18\x1b\xff\xae\x24\x5a\x6f\x00\x7b\x6b\x5c\x3f\xf5\x0e\xee\xf3\xa2\x5b\x01\xa1\x9b\xbf\xe6\x6f\xf0\xf0\xc8\xfb\x8d\x56\x37\x6f\x67\xf8\xcc\xd9\x69\x16\xcc\x60\xcb\x98\x6c\x18\x37\x0b\x73\xe4\x66\xd8\x34\xa4\x4a\x78\x8b\x78\xa1\xa5\x88\xa4\xd2\x8a\x59\x20\x83\x91\x13\xe0\x82\x97\x8a\x97\x89\x97\xbb\x2a\xbe\xe0\x2f\xdd\x36\xcc\x9c\x38\xfe\x32\x12\x00\x55\x51\xc7\xf0\xe2\x55\xbf\xc5\x6b\xba\x5a\xe6\x48\x0e\xf6\xb8\xb3\x51\xa0\x44\x05\xcf\x77\x14\x60\x29\xf1\xd1\xa3\x10\xef\x68\x2b\xec\x95\xe7\x48\xe4\x24\xca\xe4\x53\xc8\xa7\x90\x89\x53\x34\xf7\x7f\xb8\x4d\x56\x19\x5c\xd1\x0f\x0b\x66\xb1\xea\xea\x87\x05\xab\x40\x75\xf5\xc7\x8a\xc9\xfd\x77\xbe\x48\x44\x66\x89\xd6\x1b\x1f",  // golden_test:ignore
      1797);  // golden_test:ignore
  static const absl::NoDestructor result(
      ::koladata::serving::embedded_slices_internal::ParseEmbeddedSlices(data));
  return *result;
}

absl::StatusOr<::koladata::DataSlice>
TestFunctors(absl::string_view name) {
  const auto& slices = TestFunctors();
  if (!slices.ok()) {
    return slices.status();
  }
  return ::koladata::serving::embedded_slices_internal::GetEmbeddedSlice(
      *slices, name);
}
}  // namespace koladata_serving_test
// NOLINTEND

